The grammar below is written in Backus-Naur Form (BNF) - https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form

<command line> : <and or> ';' <command line>	; in the code, this is of type AST_SEQ, as it's a sequence of commands
               | <and or> ';'
               | <and or>
               ;

<and or>       : <job> '&&' <and or>
               | <job> '||' <and or>
               | <job>
               ;

<job>          : <command> '|' <job>
               | <command>
               ;

<command>      : <token list>
               ;

<token list>   : [name]  <token list>
               | [token] <token list>
               | <redir> <token list>
               ;

<redir>        : <redir in>
               | <redir out>
               ;

<redir in>     : '<<' [file]
               | '<'  [file]
               ;

<redir out>    : '>>' [file]
               | '>'  [file]
               ;

The symbology above can be easily explained if we follow a bottom-up approach, starting with the individual definitions.
- Heredoc is the use of "<<" followed by a termiator
- A word is any string correctly quoted
- A redirection is considered the use of "<", ">", or ">>" followed by a filename

Having the basic definitions understood we can start getting into the recursive definitionsw of the other parts.
- A command can be comprised of a single word ("ls"), redirection ("> test.txt"), or a heredoc ("<< EOF"). Additionally,
	a command can also be defined as a series words, redirections, or a combination of both ("ls -l > out.txt").
- A pipeline can be defined as a single command (as defined above), or as a series of commands concatenated by a "|"

